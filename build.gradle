plugins {
    id "architectury-plugin" version "3.4-SNAPSHOT"
    id "dev.architectury.loom" version "1.4-SNAPSHOT" apply false
}

architectury {
    minecraft = rootProject.minecraft_version
}

subprojects {
    apply plugin: "dev.architectury.loom"

    loom {
        silentMojangMappingsLicense()
    }

    dependencies {
        minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"
        // The following line declares the mojmap mappings, you may use other mappings as well
        mappings loom.layered() {
            officialMojangMappings()
            parchment("org.parchmentmc.data:parchment-${rootProject.parchment_minecraft_version}:${rootProject.parchment_version}@zip")
        }
        // The following line declares the yarn mappings you may select this one as well.
        // mappings "net.fabricmc:yarn:1.20.1+build.10:v2"
    }
}

var buildNumber = System.getenv("BUILD_NUMBER")

if(buildNumber == null) {
    buildNumber = "64"
}

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"
    apply plugin: "maven-publish"

    version = rootProject.mod_version + "." + buildNumber
    group = rootProject.maven_group

    repositories {
        // Add repositories to retrieve artifacts from in here.
        // You should only use this when depending on other mods because
        // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
        // See https://docs.gradle.org/current/userguide/declaring_repositories.html
        // for more information about repositories.

        maven { url "https://maven.neoforged.net/releases/" }
        maven {
            name = 'ParchmentMC'
            url = 'https://maven.parchmentmc.org'
        }
        maven {
            url "https://cursemaven.com"
        }
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
        options.release = 17
    }

    java {
        withSourcesJar()
    }

    processResources {
        inputs.property "version", project.version

        filesMatching(["fabric.mod.json", "META-INF/mods.toml"]) {
            expand "version": project.version,
                    "mod_id": rootProject.mod_id,
                    "mod_name": rootProject.mod_name,
                    "mod_description": rootProject.mod_description,
                    "mod_author": rootProject.mod_author,
                    "mod_website": rootProject.mod_website,
                    "mod_sources": rootProject.mod_sources,
                    "mod_fabric_loader_minimum": rootProject.mod_fabric_loader_minimum,
                    "mod_neo_loader_version": rootProject.mod_neo_loader_version,
                    "mod_neo_version": rootProject.mod_neo_version,
                    "mod_neo_minecraft_range": rootProject.mod_neo_minecraft_range,
                    "mod_forge_loader_version": rootProject.mod_neo_loader_version,
                    "mod_forge_version": rootProject.mod_neo_version,
                    "mod_forge_minecraft_range": rootProject.mod_neo_minecraft_range,
                    "logo_file": rootProject.logo_file
        }
    }
}

